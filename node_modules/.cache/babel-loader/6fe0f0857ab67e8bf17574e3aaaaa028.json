{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  } // componentDidMount() {\n  //     console.log('My component was rendered to the screen');\n  // }\n  // componentDidUpdate() {\n  //     console.log('My component was just updated - it rerendered!');\n  // }\n  // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Latitude: \", this.state.lat, \" \");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Loading! \");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAY9BC,KAZ8B,GAYtB;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAZsB;AAAA;;AAiB9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AACtBR,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AADC,KAAd,CADhB,EAIIC,GAAG,IAAI,KAAKH,QAAL,CAAc;AACjBP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AADD,KAAd,CAJX;AAQH,GA1B6B,CA4B9B;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKD,KAAL,CAAWE,YAA1B,MAAP;AAEC;;AAEL,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,KAAKD,KAAL,CAAWC,GADZ,MAAP;AAGK;;AAET,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACS;;AAlDiB;;AAsDlCJ,QAAQ,CAACiB,MAAT,CAAiB,oBAAE,GAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjB,EAA4BC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAA5B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n    // constructor(props) {\n    //     super(props);\n\n    //     // THIS IS THE ONLY TIME we do direct assignment\n    //     // to this.state\n    //     this.state = {\n    //         lat: null,\n    //         errorMessage: ''\n    //     };\n    // }\n\n    state = {\n        lat: null,\n        errorMessage: \"\"\n    };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({\n                lat: position.coords.latitude\n            }),\n            err => this.setState({\n                errorMessage: err.message\n            })\n        );\n    }\n\n    // componentDidMount() {\n    //     console.log('My component was rendered to the screen');\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('My component was just updated - it rerendered!');\n    // }\n\n    // React says we have to define render!!\n    render() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div> Error: { this.state.errorMessage\n            } < /div>;\n            }\n    \n        if (!this.state.errorMessage && this.state.lat) {\n            return <div > Latitude: {\n                    this.state.lat\n                } < /div>;\n                }\n        \n        return <div > Loading! < /div>;\n                }\n            }\n            \n            \nReactDOM.render( < App /> , document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}