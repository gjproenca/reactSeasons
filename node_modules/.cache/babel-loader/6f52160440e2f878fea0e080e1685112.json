{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  } // componentDidMount() {\n  //     console.log('My component was rendered to the screen');\n  // }\n  // componentDidUpdate() {\n  //     console.log('My component was just updated - it rerendered!');\n  // }\n\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Spinner, {\n      message: \"Please accept location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  } // React says we have to define render!!\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"border red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","renderContent","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAY9BC,KAZ8B,GAYtB;AACJC,MAAAA,GAAG,EAAE,IADD;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAZsB;AAAA;;AAiB9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AACtBR,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AADC,KAAd,CADhB,EAIIC,GAAG,IAAI,KAAKH,QAAL,CAAc;AACjBP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AADD,KAAd,CAJX;AAQH,GA1B6B,CA4B9B;AACA;AACA;AAEA;AACA;AACA;;;AAEAC,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACH;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GA9C6B,CAgD9B;;;AACAc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKD,aAAL,EADN,CADJ;AAKH;;AAvD6B;;AA2DlCnB,QAAQ,CAACoB,MAAT,CAAgB,oBAAE,GAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n    // constructor(props) {\n    //     super(props);\n\n    //     // THIS IS THE ONLY TIME we do direct assignment\n    //     // to this.state\n    //     this.state = {\n    //         lat: null,\n    //         errorMessage: ''\n    //     };\n    // }\n\n    state = {\n        lat: null,\n        errorMessage: \"\"\n    };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({\n                lat: position.coords.latitude\n            }),\n            err => this.setState({\n                errorMessage: err.message\n            })\n        );\n    }\n\n    // componentDidMount() {\n    //     console.log('My component was rendered to the screen');\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('My component was just updated - it rerendered!');\n    // }\n\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />;\n        }\n\n        return <Spinner message=\"Please accept location request\" />;\n    }\n\n    // React says we have to define render!!\n    render() {\n        return (\n            <div className=\"border red\">\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(< App />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}