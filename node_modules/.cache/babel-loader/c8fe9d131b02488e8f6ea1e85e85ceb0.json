{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // THIS IS THE ONLY TIME we do direct assignment\n    // to this.state\n\n    this.state = {\n      lat: null,\n      error\n    };\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  } // componentDidMount() {\n  //     console.log('My component was rendered to the screen');\n  // }\n  // componentDidUpdate() {\n  //     console.log('My component was just updated - it rerendered!');\n  // }\n  // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Loading!\");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/goncaloproenca/Desktop/udemy/react/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","lat","error","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;;AAJe,SAWnBC,KAXmB,GAWX;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA;AAAb,KAXW;AAKf,SAAKF,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,IADI;AAETE,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAIDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAET,MAAAA,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,KAAd,CADhB,EAEIC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAApB,KAAd,CAFX;AAIH,GAnB6B,CAqB9B;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKf,KAAL,CAAWG,YAAX,IAA2B,CAAC,KAAKH,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWG,YAAxB,CAAP;AACH;;AAED,QAAI,CAAC,KAAKH,KAAL,CAAWG,YAAZ,IAA4B,KAAKH,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAxC6B;;AA2ClCN,QAAQ,CAACoB,MAAT,CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // THIS IS THE ONLY TIME we do direct assignment\n        // to this.state\n        this.state = {\n            lat: null,\n            errorMessage: ''\n        };\n    }\n\n    state = { lat: null, error}\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude }),\n            err => this.setState({ errorMessage: err.message })\n        );\n    }\n\n    // componentDidMount() {\n    //     console.log('My component was rendered to the screen');\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('My component was just updated - it rerendered!');\n    // }\n\n    // React says we have to define render!!\n    render() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <div>Latitude: {this.state.lat}</div>\n        }\n\n        return <div>Loading!</div>\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}